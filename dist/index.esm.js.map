{"version":3,"file":"index.esm.js","sources":["../src/components/MapContext.js","../src/components/MapComponentsProvider.js","../src/components/SimpleDataContext.js","../src/components/SimpleDataProvider.js"],"sourcesContent":["import React from \"react\";\n\nconst MapContext = React.createContext({});\n\nexport const MapContextProvider = MapContext.Provider;\nexport default MapContext;\n","import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MapContextProvider } from \"./MapContext\";\n\n/**\n * MapComponentsProvider must be imported and wrapped around component where at least one of its child nodes requires access to a MapLibre-gl or openlayers instance that is registered in this mapContext.\nMapComponentsProvider must be used one level higher than the first use of MapContext.\n *\n * MapComponentsProvider requires at least one use of the MapLibreMap component somewhere down the component tree that will create the MapLibre-gl object and set the reference at MapContext.map. For MapLibre maps it is a good idea to provide a mapId attribute to the MapLibreMap Component even if you are only using a single map instance at start. It will make a later transition to using multiple instances within the same project much easier.\n */\n\nconst MapComponentsProvider = ({ children }) => {\n  const [map, setMap] = useState(undefined);\n  const [mapIds, setMapIds] = useState([]);\n  let mapIds_raw = useRef([]);\n  let maps = useRef({});\n\n  const removeMap = (mapId) => {\n      if(mapId){\n        if(typeof maps.current[mapId] !== 'undefined'){\n          delete maps.current[mapId];\n        }\n        let mapIdIndex = mapIds_raw.current.indexOf(mapId);\n        if (mapIdIndex > -1) {\n          mapIds_raw.current.splice(mapIdIndex, 1);\n        }\n        setMapIds([...mapIds_raw.current]);\n\n        if(mapIds.length === 1 && map){\n          setMap(undefined);\n        }\n      }else{\n        setMap(undefined);\n        removeMap('anonymous_map');\n      }\n    }\n\n  const value = {\n    map: map,\n    setMap: (mapInstance) => {\n        setMap(mapInstance);\n\n        if(mapIds.length === 0){\n          let mapId = 'anonymous_map';\n          setMapIds([...mapIds, mapId]);\n          maps.current[mapId] = mapInstance;\n        }\n    },\n    maps: maps.current,\n    mapIds: mapIds,\n    registerMap: (mapId, mapInstance) => {\n      if(mapId && mapInstance){\n          maps.current[mapId] = mapInstance;\n          mapIds_raw.current.push(mapId);\n          setMapIds([...mapIds_raw.current]);\n\n          if(!map){\n            setMap(mapInstance);\n          }\n      }\n    },\n    removeMap,\n    mapExists: (mapId) => {\n      if (mapId && Object.keys(maps.current).indexOf(mapId) === -1) {\n        return false;\n      } else if (!mapId && !map) {\n        return false;\n      }\n      return true;\n    },\n    getMap: (mapId) => {\n      if (mapId && mapIds.indexOf(mapId) !== -1) {\n        return maps.current[mapId];\n      } else if (!mapId && map) {\n        return map;\n      }\n\n      return null;\n    },\n  };\n\n  return <MapContextProvider value={value}>{children}</MapContextProvider>;\n};\n\nMapComponentsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default MapComponentsProvider;\n","import React from \"react\";\n\nconst SimpleDataContext = React.createContext({});\n\nexport const SimpleDataContextProvider = SimpleDataContext.Provider;\nexport default SimpleDataContext;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SimpleDataContextProvider } from \"./SimpleDataContext\";\nimport * as d3 from \"d3\";\n\nconst SimpleDataProvider = (props) => {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    if (!props.url) return;\n\n    let data_promise = null;\n    if (props.format === \"json\") {\n      data_promise = d3.json(props.url);\n    } else if (props.format === \"csv\") {\n      data_promise = d3.csv(props.url);\n    } else if (props.format === \"xml\") {\n      data_promise = d3.xml(props.url);\n    }\n\n    if (data_promise) {\n      data_promise.then((received_data) => {\n        if (props.format === \"xml\") {\n          if (props.nodeType) {\n            let dataTmp = [];\n            received_data.querySelectorAll(props.nodeType).forEach((el) => {\n\n              dataTmp.push(props.formatData(el));\n            });\n            setData(dataTmp);\n          }\n        } else {\n          if (props.data_property) {\n            received_data = received_data[props.data_property];\n          }\n          if (typeof props.formatData === \"function\") {\n            setData(received_data.map(props.formatData));\n          } else {\n            setData(received_data);\n          }\n        }\n        if (typeof props.onData === \"function\") {\n          props.onData();\n        }\n      });\n    }\n  }, [props.url, props]);\n\n  const value = {\n    data: data,\n    setData: setData,\n  };\n\n  return (\n    <SimpleDataContextProvider value={value}>\n      {props.children}\n    </SimpleDataContextProvider>\n  );\n};\n\nSimpleDataProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SimpleDataProvider;\n"],"names":["MapContext","React","createContext","MapContextProvider","Provider","MapComponentsProvider","children","useState","undefined","map","setMap","mapIds","setMapIds","mapIds_raw","useRef","maps","removeMap","mapId","current","mapIdIndex","indexOf","splice","length","value","mapInstance","registerMap","push","mapExists","Object","keys","getMap","propTypes","PropTypes","node","isRequired","SimpleDataContext","SimpleDataContextProvider","SimpleDataProvider","props","data","setData","useEffect","url","data_promise","format","d3","json","csv","xml","then","received_data","nodeType","dataTmp","querySelectorAll","forEach","el","formatData","data_property","onData"],"mappings":"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"}